@mixin center {
  margin: 0 auto;
}

@mixin clear-fix {
  display: block;

  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin pull-right {
  float: right;
  @include clear-fix;
}

@mixin pull-left {
  float: left;
  @include clear-fix;
}

@mixin span-grid($size) {
  width: ($size/12)*100%;
  height: 100%;
  float: left;
  padding-right: 20px;
  @include clear-fix;

  &:last-of-type {
    padding-right: 0;
  }
}

@mixin offset-grid($size) {
  margin-left: ($size/12)*100%;
}

@mixin border-radius($topLeft, $topRight:$topLeft, $bottomRight:$topLeft, $bottomLeft:$topLeft) {
  -webkit-border-radius: $topLeft $topRight $bottomRight $bottomLeft; /* Safari 3-4, iOS 1-3.2, Android 1.6- */
  -moz-border-radius:    $topLeft $topRight $bottomRight $bottomLeft;   /* Firefox 1-3.6 */
  border-radius: 		 $topLeft $topRight $bottomRight $bottomLeft;   /* Opera 10.5, IE 9, Safari 5, Chrome, Firefox 4, iOS 4, Android 2.1+ */
}

@mixin box-shadow($horOffset:0, $vertOffset:0, $blur:0, $spread:0, $color:#fff) {
  -moz-box-shadow:  $horOffset $vertOffset $blur $spread $color;
  -webkit-box-shadow: $horOffset $vertOffset $blur $spread $color;
  box-shadow:         $horOffset $vertOffset $blur $spread $color;
}

@mixin transition($var...) {
  -webkit-transition: $var;
  -moz-transition: $var;
  -ms-transition: $var;
  -o-transition: $var;
  transition: $var;
}

@mixin transition-delay($var...) {
  -webkit-transition-delay: $var;
  -moz-transition-delay: $var;
  -o-transition-delay: $var;
  transition-delay: $var;
}

@mixin transparency($val) {
  zoom: 1;
  filter: alpha(opacity=$val*100);
  opacity: $val;
}

@mixin placeholder-color($color) {
  &::-webkit-input-placeholder {
    color: $color;
  }

  &:-moz-placeholder { /* Firefox 18- */
    color: $color;
  }

  &::-moz-placeholder {  /* Firefox 19+ */
    color: $color;
  }

  &:-ms-input-placeholder {
    color: $color;
  }
}

@mixin rotate-text($deg) {
  -webkit-transform: rotate($deg); /* Safari */
  -moz-transform: rotate($deg); /* Firefox */
  -ms-transform: rotate($deg); /* IE */
  -o-transform: rotate($deg); /* Opera */
  //filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3); /* Internet Explorer */
  transform: rotate($deg);
}

@mixin sticky-header($top) {
  position: -webkit-sticky;
  position: -moz-sticky;
  position: -ms-sticky;
  position: -o-sticky;
  position: sticky;
  top: $top;
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }

  @-moz-keyframes #{$name} {
    @content;
  }

  @-ms-keyframes #{$name} {
    @content;
  }

  @keyframes #{$name} {
    @content;
  }
}

@mixin animation($var...) {
  -webkit-animation: $var;
  -moz-animation: $var;
  -o-animation: $var;
  animation: $var;
}

@mixin triangle($size, $color) {
  border-right: $size solid $color;
  border-bottom: $size solid transparent;
  border-top: $size solid transparent;
}

@mixin linear-gradient($var...) {
  background-image: -webkit-linear-gradient($var);
  background-image:    -moz-linear-gradient($var);
  background-image:     -ms-linear-gradient($var);
  background-image:      -o-linear-gradient($var);
}

@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex: $values;
  -webkit-flex: $values;
  -ms-flex: $values;
  flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
  -moz-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
  -moz-flex-wrap: $wrap;
  -ms-flex-wrap: $wrap;
  flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
  -moz-flex-flow: $flow;
  -ms-flex-flow: $flow;
  flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
  -webkit-flex-grow: $grow;
  -moz-flex-grow: $grow;
  -ms-flex-grow: $grow;
  flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
@mixin flex-shrink($shrink) {
  -webkit-flex-shrink: $shrink;
  -moz-flex-shrink: $shrink;
  -ms-flex-shrink: $shrink;
  flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
  -moz-flex-basis: $width;
  -ms-flex-basis: $width;
  flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
  -moz-justify-content: $justify;
  -ms-justify-content: $justify;
  justify-content: $justify;
  -ms-flex-pack: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align) {
  -webkit-align-content: $align;
  -moz-align-content: $align;
  -ms-align-content: $align;
  align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
  -webkit-align-items: $align;
  -moz-align-items: $align;
  -ms-align-items: $align;
  -ms-flex-align: $align;
  align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align) {
  -webkit-align-self: $align;
  -moz-align-self: $align;
  -ms-align-self: $align;
  align-self: $align;
}
